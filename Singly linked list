#include <stdio.h>
#include <stdlib.h>

typedef struct node{
int data;
struct node* next;
} node;

node* head = NULL;

node* createLinkedNode(void){
node* ptr = (node*)malloc(sizeof(node));

if(ptr==NULL){
    printf("memory allocation failed\n");
    exit(1);
}

return ptr;
}

void createNode(int data){
node* ptr = createLinkedNode();

ptr->data = data;
ptr->next = NULL;

if(head==NULL)
    head = ptr;

else{
    node* current = head;
    while(current->next != NULL){
        current = current->next;
    }

    current->next = ptr;
}

}

void insertFirst(int data){
node* ptr = createLinkedNode();
ptr->data = data;
ptr->next = head;
head = ptr;
}

void insertPosition(int data, int position){

node* current = head;
node* ptr = createLinkedNode();
int count = 1;

while(count<position && current!=NULL){
    current = current->next;
    count++;
}
ptr->next = current->next;
ptr->data = data;
current->next = ptr;
//current = current->next;
}

void printLinkedList(void);
void freeMemory(void);
void searchNum(int data);

void deleteFirst(void){
node* temp = head;

head = head->next;

free(temp);

}

void deleteLast(void){
node* temp = head;


while(temp->next->next != NULL){
    temp = temp->next;
}

free(temp->next->next);
temp->next = NULL;

}

void deletePosition(int position){
node* current = head;

for(int i=0;current!=NULL && i<position-1;i++)
    current = current->next;

    node* temp = current->next->next;
    free(current->next);
current->next = temp;

}



int main(void) {
    int a;
    while(scanf("%d", &a), a!=0){
        createNode(a);
    }

    insertFirst(50);
    insertFirst(100);
    insertPosition(200, 4);
    insertPosition(500, 2);
    insertPosition(900, 7);
    deleteFirst();
    deleteFirst();
    deleteLast();
    deleteLast();
    deletePosition(5);

printLinkedList();
for(int i=0; i<5; i++){
scanf("%d", &a);
searchNum(a);
}

freeMemory();

return 0;
}

void searchNum(int data){

node* current = head;

while(current!=NULL){
    if(current->data==data){
        printf("Found\n");
        return;
    }
    current = current->next;
}

printf("not found\n");
}

void printLinkedList(void){
node* ptr = head;

while(ptr!=NULL){
    printf("%d ", ptr->data);
    ptr = ptr->next;
}
printf("\n");
}

void freeMemory(void){
node* current = head;
node* next;

while(current != NULL){
    next = current->next;
    free(current);
    current = next;
}


}
